apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-app-deployment
  namespace: go-app
  labels:
    app: go-app
spec:
  replicas: 4
  selector:
    matchLabels:
      app: go-app            # selector must match the pod label below
  template:
    metadata:
      labels:
        app: go-app
    spec:
      # --- Init ‑ wait for Postgres ------------------------------------------------
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.35
        command: ["sh", "-c"]
        args:
        - |
          until nc -z postgres-service 5432; do
            echo "Waiting for PostgreSQL…"
            sleep 2
          done
          echo "PostgreSQL is ready!"
      # --- Main container -----------------------------------------------------------
      containers:
      - name: go-app
        image: samarth1014/expense-backend:0.1.2
        ports:
        - containerPort: 8080
        env:
        # ConfigMap values
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: go-app-config
              key: APP_PORT
        - name: PROJECT
          valueFrom:
            configMapKeyRef:
              name: go-app-config
              key: PROJECT
        # Secret values
        - name: CLERK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: go-app-secret
              key: CLERK_SECRET_KEY
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: go-app-secret
              key: JWT_SECRET        # ← fixed indentation & key name
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        # Optional probes (uncomment if your app exposes them)
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: go-app-service
  namespace: go-app
  labels:
    app: go-app
spec:
  # Choose one of these:
  # type: LoadBalancer    # For cloud clusters with an external LB
  type: NodePort          # For bare‑metal / kind / Minikube
  selector:
    app: go-app
  ports:
  - name: http
    protocol: TCP
    port: 80            # Clients hit :80 on the service
    targetPort: 8080    # …which forwards to containerPort 8080
    nodePort: 30080     # Only used if type = NodePort
